001b790c W CactusTile::canSurvive(Level*, int, int, int)
001b5c5c W CactusTile::getTexture(int)
001b5c00 W CactusTile::getTileAABB(Level*, int, int, int)
001b5c88 W CactusTile::entityInside(Level*, int, int, int, Entity*)
001b5c6e W CactusTile::isCubeShaped()
001b5c72 W CactusTile::isSolidRender()
001b5c7a W CactusTile::getRenderLayer()
001b5c76 W CactusTile::getRenderShape()
001b7f58 W CactusTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b7724 W CactusTile::tick(Level*, int, int, int, Random*)
001b5b8c W CactusTile::getAABB(Level*, int, int, int)
001b7e3e W CactusTile::mayPlace(Level*, int, int, int)
001bd528 W CactusTile::CactusTile(int)
001bd528 W CactusTile::CactusTile(int)
001b708a W CactusTile::~CactusTile()
001b6f7c W CactusTile::~CactusTile()
001b6f7c W CactusTile::~CactusTile()
001b09a4 T CarrotTile::getTexture(int, int)
001b096c T CarrotTile::getBaseSeed()
001b0980 T CarrotTile::getBasePlantId()
001b0998 T CarrotTile::spawnResources(Level*, int, int, int, int, float)
001b0a00 T CarrotTile::CarrotTile(int)
001b0a00 T CarrotTile::CarrotTile(int)
001b09ec W CarrotTile::~CarrotTile()
001b09c4 W CarrotTile::~CarrotTile()
001b09c4 W CarrotTile::~CarrotTile()
001b1d80 T EntityTile::triggerEvent(Level*, int, int, int, int, int)
001b1d70 T EntityTile::newTileEntity()
001b1da8 T EntityTile::onPlace(Level*, int, int, int)
001b1d9c T EntityTile::onRemove(Level*, int, int, int)
001b1e08 T EntityTile::EntityTile(int, Material const*)
001b1e38 T EntityTile::EntityTile(int, std::string const&, Material const*)
001b1e08 T EntityTile::EntityTile(int, Material const*)
001b1e38 T EntityTile::EntityTile(int, std::string const&, Material const*)
001b1df4 W EntityTile::~EntityTile()
001b1dd0 W EntityTile::~EntityTile()
001b1dd0 W EntityTile::~EntityTile()
001bb8d0 W FlowerTile::_randomWalk(Level*, int&, int&, int&, int)
001bb9c4 W FlowerTile::onFertilized(Level*, int, int, int)
001b7204 W FlowerTile::~FlowerTile()
001b6c1c W FlowerTile::~FlowerTile()
001b6c1c W FlowerTile::~FlowerTile()
001b8f88 W GravelTile::getResource(int, Random*)
001b8dec W GravelTile::~GravelTile()
001b8dcc W GravelTile::~GravelTile()
001b8dcc W GravelTile::~GravelTile()
001b6a88 W LadderTile::getTileAABB(Level*, int, int, int)
001b5eea W LadderTile::isCubeShaped()
001b5ee6 W LadderTile::isSolidRender()
001b5ef2 W LadderTile::getRenderLayer()
001b5eee W LadderTile::getRenderShape()
001bbf54 W LadderTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b5f94 W LadderTile::getResourceCount(Random*)
001b5ef6 W LadderTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b6850 W LadderTile::getAABB(Level*, int, int, int)
001b79ee W LadderTile::mayPlace(Level*, int, int, int, unsigned char)
001b7162 W LadderTile::~LadderTile()
001b6e1c W LadderTile::~LadderTile()
001b6e1c W LadderTile::~LadderTile()
001b6030 W LiquidTile::getTexture(int)
001b9228 W LiquidTile::animateTick(Level*, int, int, int, Random*)
001b605a W LiquidTile::getResource(int, Random*)
001b606c W LiquidTile::getTickDelay()
001b603a W LiquidTile::isCubeShaped()
001b602c W LiquidTile::isLiquidTile()
001ba300 W LiquidTile::updateLiquid(Level*, int, int, int)
001b609c W LiquidTile::getBrightness(LevelSource*, int, int, int)
00146798 W LiquidTile::getSlopeAngle(LevelSource*, int, int, int, Material const*)
001b72c2 W LiquidTile::getTextureNum(int)
001b603e W LiquidTile::isSolidRender()
001c29a8 T LiquidTile::_trySpreadFire(Level*, int, int, int, Random*)
001b60ec W LiquidTile::getRenderLayer()
001b6056 W LiquidTile::getRenderShape()
001ba428 W LiquidTile::neighborChanged(Level*, int, int, int, int, int, int, int)
00146484 W LiquidTile::getRenderedDepth(LevelSource*, int, int, int)
001b605e W LiquidTile::getResourceCount(Random*)
001b7d88 W LiquidTile::shouldRenderFace(LevelSource*, int, int, int, int)
001ba47e W LiquidTile::handleEntityInside(Level*, int, int, int, Entity*, Vec3&)
001ba1d4 W LiquidTile::fizz(Level*, int, int, int)
001b60ea W LiquidTile::tick(Level*, int, int, int, Random*)
001b6052 W LiquidTile::getAABB(Level*, int, int, int)
001464cc W LiquidTile::getFlow(LevelSource*, int, int, int)
001b6042 W LiquidTile::mayPick(int, bool)
001ba42c W LiquidTile::onPlace(Level*, int, int, int)
001b6064 W LiquidTile::getColor(LevelSource*, int, int, int)
001ba2bc W LiquidTile::getDepth(Level*, int, int, int)
001bd810 W LiquidTile::LiquidTile(int, Material const*, std::string const&, std::string const&)
001bd810 W LiquidTile::LiquidTile(int, Material const*, std::string const&, std::string const&)
001b9510 W LiquidTile::~LiquidTile()
001b94e8 W LiquidTile::~LiquidTile()
001b94e8 W LiquidTile::~LiquidTile()
001b36a0 T PotatoTile::getTexture(int, int)
001b3668 T PotatoTile::getBaseSeed()
001b367c T PotatoTile::getBasePlantId()
001b3694 T PotatoTile::spawnResources(Level*, int, int, int, int, float)
001b36fc T PotatoTile::PotatoTile(int)
001b36fc T PotatoTile::PotatoTile(int)
001b36e8 W PotatoTile::~PotatoTile()
001b36c0 W PotatoTile::~PotatoTile()
001b36c0 W PotatoTile::~PotatoTile()
00184ba0 T FallingTile::isPickable()
00184b9c W FallingTile::getShadowRadius()
00184baa T FallingTile::getShadowHeightOffs()
00184ef0 T FallingTile::addAdditonalSaveData(CompoundTag*)
00184e80 T FallingTile::readAdditionalSaveData(CompoundTag*)
00184da8 T FallingTile::init()
00184be8 T FallingTile::tick()
00184e7c T FallingTile::getLevel()
00184e4c T FallingTile::FallingTile(Level*)
00184dec T FallingTile::FallingTile(Level*, float, float, float, int, int)
00184e4c T FallingTile::FallingTile(Level*)
00184dec T FallingTile::FallingTile(Level*, float, float, float, int, int)
00184bd4 W FallingTile::~FallingTile()
00184bb4 W FallingTile::~FallingTile()
00184bb4 W FallingTile::~FallingTile()
001b1f1c T FurnaceTile::getTexture(LevelSource*, int, int, int, int)
001b1e9c T FurnaceTile::getTexture(int)
001b1fe4 T FurnaceTile::animateTick(Level*, int, int, int, Random*)
001b1e84 T FurnaceTile::getResource(int, Random*)
001b1e80 W FurnaceTile::getTileEntityType()
001b1eb8 T FurnaceTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b1f56 T FurnaceTile::use(Level*, int, int, int, Player*)
009881a8 B FurnaceTile::noDrop
001b248c T FurnaceTile::setLit(bool, Level*, int, int, int)
001b2188 T FurnaceTile::onRemove(Level*, int, int, int)
001b2334 T FurnaceTile::FurnaceTile(int, bool)
001b2334 T FurnaceTile::FurnaceTile(int, bool)
001b1fc0 W FurnaceTile::~FurnaceTile()
001b1fa0 W FurnaceTile::~FurnaceTile()
001b1fa0 W FurnaceTile::~FurnaceTile()
001b3ad4 T PumpkinTile::getTexture(int, int)
001b3a24 T PumpkinTile::setPlacedBy(Level*, int, int, int, Player*, ItemInstance*)
001b3a22 T PumpkinTile::onPlace(Level*, int, int, int)
001b3a7c T PumpkinTile::mayPlace(Level*, int, int, int)
001b3b3c T PumpkinTile::PumpkinTile(int, bool)
001b3b3c T PumpkinTile::PumpkinTile(int, bool)
001b3b28 W PumpkinTile::~PumpkinTile()
001b3b08 W PumpkinTile::~PumpkinTile()
001b3b08 W PumpkinTile::~PumpkinTile()
001b64b4 W TopSnowTile::getResource(int, Random*)
001b6444 W TopSnowTile::getTileType()
001b64d0 W TopSnowTile::getThickness()
001b6450 W TopSnowTile::isCubeShaped()
001b644c W TopSnowTile::isSolidRender()
001b90d0 W TopSnowTile::playerDestroy(Level*, Player*, int, int, int, int)
001bb430 W TopSnowTile::checkCanSurvive(Level*, int, int, int)
001bb48c W TopSnowTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b64cc W TopSnowTile::getResourceCount(Random*)
001b7cf0 W TopSnowTile::shouldRenderFace(LevelSource*, int, int, int, int)
001b803c W TopSnowTile::tick(Level*, int, int, int, Random*)
001b6448 W TopSnowTile::getAABB(Level*, int, int, int)
001b6454 W TopSnowTile::mayPlace(Level*, int, int, int)
001b724c W TopSnowTile::~TopSnowTile()
001b6cbc W TopSnowTile::~TopSnowTile()
001b6cbc W TopSnowTile::~TopSnowTile()
001af4ae T BaseRailTile::blocksLight()
001af15c T BaseRailTile::updateShape(LevelSource*, int, int, int)
001af050 T BaseRailTile::updateState(Level*, int, int, int, int, int, int)
001af034 W BaseRailTile::getThickness()
001af044 T BaseRailTile::isCubeShaped()
001af040 T BaseRailTile::isSolidRender()
001af4a8 T BaseRailTile::isUsesDataBit()
001af052 T BaseRailTile::getRenderLayer()
001af048 T BaseRailTile::getRenderShape()
001af19c T BaseRailTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001af04c T BaseRailTile::getResourceCount(Random*)
001af2d0 T BaseRailTile::Rail::connectsTo(BaseRailTile::Rail*)
001af33c T BaseRailTile::Rail::canConnectTo(BaseRailTile::Rail*)
001af308 T BaseRailTile::Rail::hasConnection(int, int, int)
001af950 T BaseRailTile::Rail::hasNeighborRail(int, int, int)
001af646 T BaseRailTile::Rail::updateConnections(int)
001af8cc T BaseRailTile::Rail::removeSoftConnections()
001af3dc T BaseRailTile::Rail::countPotentialConnections()
001af984 T BaseRailTile::Rail::place(bool, bool)
001af844 T BaseRailTile::Rail::getRail(TilePos const&)
001af3a4 T BaseRailTile::Rail::hasRail(int, int, int)
001af508 T BaseRailTile::Rail::connectTo(BaseRailTile::Rail*)
001af790 T BaseRailTile::Rail::Rail(Level*, int, int, int)
001af790 T BaseRailTile::Rail::Rail(Level*, int, int, int)
001af118 T BaseRailTile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
001af394 T BaseRailTile::isRail(Level*, int, int, int)
001af364 T BaseRailTile::isRail(int)
001af03c T BaseRailTile::getAABB(Level*, int, int, int)
001afbee T BaseRailTile::onPlace(Level*, int, int, int)
001af10c T BaseRailTile::mayPlace(Level*, int, int, int)
001af09c T BaseRailTile::onRemove(Level*, int, int, int)
001afbb4 T BaseRailTile::updateDir(Level*, int, int, int, bool)
001af428 T BaseRailTile::BaseRailTile(int, bool)
001af428 T BaseRailTile::BaseRailTile(int, bool)
001af2bc W BaseRailTile::~BaseRailTile()
001af298 W BaseRailTile::~BaseRailTile()
001af298 W BaseRailTile::~BaseRailTile()
001b055c T BeetrootTile::getTexture(int, int)
001b049c T BeetrootTile::getBaseSeed()
001b04b0 T BeetrootTile::getBasePlantId()
001b0800 T BeetrootTile::spawnResources(Level*, int, int, int, int, float)
001b0710 T BeetrootTile::spawnItem(Level*, int, int, int, ItemInstance const&)
001b08d8 T BeetrootTile::BeetrootTile(int)
001b08d8 T BeetrootTile::BeetrootTile(int)
001b06e8 W BeetrootTile::~BeetrootTile()
001b06c0 W BeetrootTile::~BeetrootTile()
001b06c0 W BeetrootTile::~BeetrootTile()
001b66c2 W HayBlockTile::getDirTexture(int, int)
001bc6c4 W HayBlockTile::HayBlockTile(int)
001bc6c4 W HayBlockTile::HayBlockTile(int)
001b8e88 W HayBlockTile::~HayBlockTile()
001b8e68 W HayBlockTile::~HayBlockTile()
001b8e68 W HayBlockTile::~HayBlockTile()
001b2d34 T LightGemTile::getResource(int, Random*)
001b2d82 T LightGemTile::getResourceCount(Random*)
001b2d94 T LightGemTile::LightGemTile(int, std::string const&, Material const*)
001b2d94 T LightGemTile::LightGemTile(int, std::string const&, Material const*)
001b2d70 W LightGemTile::~LightGemTile()
001b2d4c W LightGemTile::~LightGemTile()
001b2d4c W LightGemTile::~LightGemTile()
001baefc W ObsidianTile::animateTick(Level*, int, int, int, Random*)
001b612c W ObsidianTile::getResource(int, Random*)
001bad18 W ObsidianTile::poofParticles(Level*, int, int, int)
001b6128 W ObsidianTile::getResourceCount(Random*)
001b7186 W ObsidianTile::~ObsidianTile()
001b6dfc W ObsidianTile::~ObsidianTile()
001b6dfc W ObsidianTile::~ObsidianTile()
001c2204 T TrapDoorTile::attachesTo(int)
001c20f8 T TrapDoorTile::blocksLight()
001c1fca T TrapDoorTile::getTileAABB(Level*, int, int, int)
001c21e4 T TrapDoorTile::updateShape(LevelSource*, int, int, int)
001c1e94 T TrapDoorTile::isCubeShaped()
001c1e90 T TrapDoorTile::isSolidRender()
001c1e9c T TrapDoorTile::getRenderLayer()
001c1e98 T TrapDoorTile::getRenderShape()
001c22cc T TrapDoorTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001c1ed0 T TrapDoorTile::updateDefaultShape()
001c1eb4 T TrapDoorTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001c1f38 T TrapDoorTile::use(Level*, int, int, int, Player*)
001c1ef4 T TrapDoorTile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
001c1ea0 T TrapDoorTile::attack(Level*, int, int, int, Player*)
001c2152 T TrapDoorTile::getDir(int)
001c2160 T TrapDoorTile::isOpen(int)
001c1fa0 T TrapDoorTile::getAABB(Level*, int, int, int)
001c20fc T TrapDoorTile::setOpen(Level*, int, int, int, bool)
001c2284 T TrapDoorTile::mayPlace(Level*, int, int, int, unsigned char)
001c2168 T TrapDoorTile::_setShape(int)
001c203c T TrapDoorTile::TrapDoorTile(int, Material const*)
001c203c T TrapDoorTile::TrapDoorTile(int, Material const*)
001c2028 W TrapDoorTile::~TrapDoorTile()
001c2004 W TrapDoorTile::~TrapDoorTile()
001c2004 W TrapDoorTile::~TrapDoorTile()
001b72b8 W WoodSlabTile::getTexture(int, int)
001b66a4 W WoodSlabTile::getResource(int, Random*)
001b7030 W WoodSlabTile::getTypeDescriptionId(int)
001b66bc W WoodSlabTile::getSpawnResourcesAuxValue(int)
001b85c8 W WoodSlabTile::Item::useOn(ItemInstance*, Player*, Level*, int, int, int, int, float, float, float)
001b9498 W WoodSlabTile::Item::~Item()
001b9478 W WoodSlabTile::Item::~Item()
001b9478 W WoodSlabTile::Item::~Item()
001bdaa4 W WoodSlabTile::WoodSlabTile(int, bool)
001bdaa4 W WoodSlabTile::WoodSlabTile(int, bool)
001b9630 W WoodSlabTile::~WoodSlabTile()
001b95fc W WoodSlabTile::~WoodSlabTile()
001b95fc W WoodSlabTile::~WoodSlabTile()
001b5b64 W BookshelfTile::getTexture(int)
001b5b74 W BookshelfTile::getResource(int, Random*)
001b5b6e W BookshelfTile::getResourceCount(Random*)
001b7078 W BookshelfTile::~BookshelfTile()
001b6f9c W BookshelfTile::~BookshelfTile()
001b6f9c W BookshelfTile::~BookshelfTile()
001b5ea4 W FenceGateTile::isCubeShaped()
001b5ea0 W FenceGateTile::isSolidRender()
001b5ea8 W FenceGateTile::getRenderShape()
001b8d88 W FenceGateTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b782c W FenceGateTile::use(Level*, int, int, int, Player*)
001b5e00 W FenceGateTile::getAABB(Level*, int, int, int)
001b7e02 W FenceGateTile::mayPlace(Level*, int, int, int)
001b70f6 W FenceGateTile::~FenceGateTile()
001b6ebc W FenceGateTile::~FenceGateTile()
001b6ebc W FenceGateTile::~FenceGateTile()
001b5ee0 W InvisibleTile::getRenderShape()
001b7150 W InvisibleTile::~InvisibleTile()
001b6e3c W InvisibleTile::~InvisibleTile()
001b6e3c W InvisibleTile::~InvisibleTile()
001b7e80 W SandStoneTile::getTexture(int, int)
001bd960 W SandStoneTile::SandStoneTile(int, std::string const&)
001bd960 W SandStoneTile::SandStoneTile(int, std::string const&)
001b95e8 W SandStoneTile::~SandStoneTile()
001b95c8 W SandStoneTile::~SandStoneTile()
001b95c8 W SandStoneTile::~SandStoneTile()
00988438 B StoneSlabTile::SLAB_NAMES
001b5476 T StoneSlabTile::getTexture(int)
001b54e0 T StoneSlabTile::getTexture(int, int)
001b5484 T StoneSlabTile::getResource(int, Random*)
00288bc0 R StoneSlabTile::SLAB_NAMES_COUNT
001b54ac T StoneSlabTile::getSpawnResourcesAuxValue(int)
001b5570 T StoneSlabTile::StoneSlabTile(int, bool)
001b5570 T StoneSlabTile::StoneSlabTile(int, bool)
001b555c W StoneSlabTile::~StoneSlabTile()
001b5538 W StoneSlabTile::~StoneSlabTile()
001b5538 W StoneSlabTile::~StoneSlabTile()
001b7df4 W ThinFenceTile::getResource(int, Random*)
001bb2fc W ThinFenceTile::updateShape(LevelSource*, int, int, int)
001b641e W ThinFenceTile::isCubeShaped()
001b641a W ThinFenceTile::isSolidRender()
001b6422 W ThinFenceTile::getRenderLayer()
001b6426 W ThinFenceTile::getRenderShape()
001b7d40 W ThinFenceTile::shouldRenderFace(LevelSource*, int, int, int, int)
001b642a W ThinFenceTile::updateDefaultShape()
001be038 W ThinFenceTile::addAABBs(Level*, int, int, int, AABB const*, std::vector<AABB, std::allocator<AABB> >&)
001468f4 W ThinFenceTile::attachsTo(int)
001bd1a8 W ThinFenceTile::ThinFenceTile(int, std::string const&, std::string const&, Material const*, bool)
001bd1a8 W ThinFenceTile::ThinFenceTile(int, std::string const&, std::string const&, Material const*, bool)
001b723a W ThinFenceTile::~ThinFenceTile()
001b6cdc W ThinFenceTile::~ThinFenceTile()
001b6cdc W ThinFenceTile::~ThinFenceTile()
001b7b76 W WorkbenchTile::getTexture(int)
001b6538 W WorkbenchTile::use(Level*, int, int, int, Player*)
001bd2ec W WorkbenchTile::WorkbenchTile(int)
001bd2ec W WorkbenchTile::WorkbenchTile(int)
001b7294 W WorkbenchTile::~WorkbenchTile()
001b6c3c W WorkbenchTile::~WorkbenchTile()
001b6c3c W WorkbenchTile::~WorkbenchTile()
001c2804 T WoolCarpetTile::canSurvive(Level*, int, int, int)
001c2778 T WoolCarpetTile::getTexture(int, int)
001c28b8 T WoolCarpetTile::updateShape(LevelSource*, int, int, int)
001c289a T WoolCarpetTile::updateShape(int)
001c2770 W WoolCarpetTile::getThickness()
001c2800 T WoolCarpetTile::isCubeShaped()
001c27fc T WoolCarpetTile::isSolidRender()
001c2934 T WoolCarpetTile::checkCanSurvive(Level*, int, int, int)
001c2992 T WoolCarpetTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001c2820 T WoolCarpetTile::shouldRenderFace(LevelSource*, int, int, int, int)
001c28d6 T WoolCarpetTile::updateDefaultShape()
001c281c T WoolCarpetTile::getSpawnResourcesAuxValue(int)
001c299e T WoolCarpetTile::getItemAuxValueForTileData(int)
001c2996 T WoolCarpetTile::getTileDataForItemAuxValue(int)
001c2794 T WoolCarpetTile::getAABB(Level*, int, int, int)
001c2836 T WoolCarpetTile::mayPlace(Level*, int, int, int)
001c28dc T WoolCarpetTile::WoolCarpetTile(int)
001c28dc T WoolCarpetTile::WoolCarpetTile(int)
001c2888 W WoolCarpetTile::~WoolCarpetTile()
001c2864 W WoolCarpetTile::~WoolCarpetTile()
001c2864 W WoolCarpetTile::~WoolCarpetTile()
001afc7c W DirectionalTile::~DirectionalTile()
001afc58 W DirectionalTile::~DirectionalTile()
001afc58 W DirectionalTile::~DirectionalTile()
001b3794 T PoweredRailTile::getTexture(int)
001b3790 T PoweredRailTile::getTexture(int, int)
001b397e T PoweredRailTile::updateState(Level*, int, int, int, int, int, int)
001b3870 T PoweredRailTile::isSameRailWithPower(Level*, int, int, int, bool, int, int)
001b38ac T PoweredRailTile::findPoweredRailSignal(Level*, int, int, int, int, bool, int)
001b37d0 T PoweredRailTile::PoweredRailTile(int)
001b37d0 T PoweredRailTile::PoweredRailTile(int)
001b37bc W PoweredRailTile::~PoweredRailTile()
001b3798 W PoweredRailTile::~PoweredRailTile()
001b3798 W PoweredRailTile::~PoweredRailTile()
001b7a46 W QuartzBlockTile::getTexture(int, int)
001b61c0 W QuartzBlockTile::getSpawnResourcesAuxValue(int)
001be1e4 W QuartzBlockTile::QuartzBlockTile(int)
001be1e4 W QuartzBlockTile::QuartzBlockTile(int)
001b71bc W QuartzBlockTile::~QuartzBlockTile()
001b6d9c W QuartzBlockTile::~QuartzBlockTile()
001b6d9c W QuartzBlockTile::~QuartzBlockTile()
001bb0f4 W RedStoneOreTile::animateTick(Level*, int, int, int, Random*)
001b61c8 W RedStoneOreTile::getResource(int, Random*)
001b61c4 W RedStoneOreTile::getTickDelay()
001baf10 W RedStoneOreTile::poofParticles(Level*, int, int, int)
001b8f2e W RedStoneOreTile::getResourceCount(Random*)
001bb158 W RedStoneOreTile::use(Level*, int, int, int, Player*)
001b7f14 W RedStoneOreTile::tick(Level*, int, int, int, Random*)
001bb188 W RedStoneOreTile::attack(Level*, int, int, int, Player*)
001bb184 W RedStoneOreTile::stepOn(Level*, int, int, int, Entity*)
001bb108 W RedStoneOreTile::interact(Level*, int, int, int)
001bc8f8 W RedStoneOreTile::RedStoneOreTile(int, std::string const&, bool)
001bc8f8 W RedStoneOreTile::RedStoneOreTile(int, std::string const&, bool)
001b71ce W RedStoneOreTile::~RedStoneOreTile()
001b6d7c W RedStoneOreTile::~RedStoneOreTile()
001b6d7c W RedStoneOreTile::~RedStoneOreTile()
001b7b24 W StonecutterTile::getTexture(int)
001b6404 W StonecutterTile::use(Level*, int, int, int, Player*)
001bd5fc W StonecutterTile::StonecutterTile(int)
001bd5fc W StonecutterTile::StonecutterTile(int)
001b7228 W StonecutterTile::~StonecutterTile()
001b6cfc W StonecutterTile::~StonecutterTile()
001b6cfc W StonecutterTile::~StonecutterTile()
001b5f98 W TransparentTile::isSolidRender()
001b7c54 W TransparentTile::shouldRenderFace(LevelSource*, int, int, int, int)
001b72a6 W TransparentTile::~TransparentTile()
001b6bfc W TransparentTile::~TransparentTile()
001b6bfc W TransparentTile::~TransparentTile()
001b7e6a W MultiTextureTile::getTexture(int, int)
001b610c W MultiTextureTile::getSpawnResourcesAuxValue(int)
001bd918 W MultiTextureTile::MultiTextureTile(int, std::string, Material const*)
001bd918 W MultiTextureTile::MultiTextureTile(int, std::string, Material const*)
001b95b4 W MultiTextureTile::~MultiTextureTile()
001b958c W MultiTextureTile::~MultiTextureTile()
001b958c W MultiTextureTile::~MultiTextureTile()
001b3d40 T RotatedPillarTile::getTexture(int, int)
001b3d88 T RotatedPillarTile::getDirTexture(int, int)
001b3d3c T RotatedPillarTile::getRenderShape()
001b3d8c T RotatedPillarTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
00288b68 R RotatedPillarTile::rotatedX
00288b50 R RotatedPillarTile::rotatedZ
001b3de4 T RotatedPillarTile::RotatedPillarTile(int, Material const*)
001b3de4 T RotatedPillarTile::RotatedPillarTile(int, Material const*)
001b3dd0 W RotatedPillarTile::~RotatedPillarTile()
001b3dac W RotatedPillarTile::~RotatedPillarTile()
001b3dac W RotatedPillarTile::~RotatedPillarTile()
001b5ed0 W HalfTransparentTile::isSolidRender()
001b5ecc W HalfTransparentTile::getRenderLayer()
001b7ca2 W HalfTransparentTile::shouldRenderFace(LevelSource*, int, int, int, int)
001b711a W HalfTransparentTile::~HalfTransparentTile()
001b6bbc W HalfTransparentTile::~HalfTransparentTile()
001b6bbc W HalfTransparentTile::~HalfTransparentTile()
0098958c B Tile::SOUND_SAND
009895fc B Tile::SOUND_WOOD
0098957c B Tile::WOOD_NAMES
001b6966 T Tile::canSurvive(Level*, int, int, int)
00988504 B Tile::cobbleWall
009885dc B Tile::emeraldOre
001b67bc T Tile::getTexture(LevelSource*, int, int, int, int)
001b67e6 T Tile::getTexture(int)
001b67dc T Tile::getTexture(int, int)
00988544 B Tile::goldenRail
009885c0 B Tile::lapisBlock
00988d64 B Tile::lightBlock
00988514 B Tile::litPumpkin
009884c8 B Tile::netherrack
001b69d0 T Tile::setTicking(bool)
00988664 B Tile::shouldTick
00988658 B Tile::stoneBrick
009884d8 B Tile::woolCarpet
0098959c B Tile::SOUND_CLOTH
009895ac B Tile::SOUND_GLASS
009895dc B Tile::SOUND_GRASS
009895bc B Tile::SOUND_METAL
009895cc B Tile::SOUND_STONE
001af012 W Tile::animateTick(Level*, int, int, int, Random*)
0098856c B Tile::furnace_lit
001bd71c T Tile::getIDByName(std::string const&, bool)
001b6916 T Tile::getResource(int, Random*)
001b69ec T Tile::getTileAABB(Level*, int, int, int)
001b6ba6 T Tile::getTileType()
009884cc B Tile::netherBrick
009884c0 B Tile::netherFence
001bbce0 T Tile::popResource(Level*, int, int, int, ItemInstance const&)
00988538 B Tile::pumpkinStem
009884b4 B Tile::quartzBlock
009885d8 B Tile::redStoneOre
001bc600 T Tile::setCategory(int, int)
001b6ba2 T Tile::setPlacedBy(Level*, int, int, int, Player*, ItemInstance*)
00988560 B Tile::stairs_wood
00938e08 D Tile::translucent
00988628 B Tile::unbreakable
001afc3e W Tile::updateShape(LevelSource*, int, int, int)
001af01a W Tile::wasExploded(Level*, int, int, int)
009895ec B Tile::SOUND_GRAVEL
0098960c B Tile::SOUND_NORMAL
0098956c B Tile::SOUND_SILENT
00988580 B Tile::emeraldBlock
001af030 W Tile::entityInside(Level*, int, int, int, Entity*)
001afc44 W Tile::getThickness()
001b690e T Tile::getTickDelay()
001b67a2 T Tile::isCubeShaped()
00988764 B Tile::isEntityTile
001af008 W Tile::isLiquidTile()
001aefec W Tile::onFertilized(Level*, int, int, int)
009884a8 B Tile::redStoneDust
001b697a T Tile::setSoundType(Tile::SoundType const&)
00988558 B Tile::stairs_brick
0098855c B Tile::stairs_stone
001af032 W Tile::triggerEvent(Level*, int, int, int, int, int)
00988604 B Tile::woodSlabHalf
00988540 B Tile::activatorRail
001b67aa T Tile::getBrightness(LevelSource*, int, int, int)
001b6b94 T Tile::getTextureNum(int)
001bbca8 T Tile::isFaceVisible(Level*, int, int, int, int)
001b68fc T Tile::isSolidRender()
001aeff4 W Tile::isUnbreakable()
00988964 B Tile::lightEmission
009884f4 B Tile::netherReactor
001b694e T Tile::playerDestroy(Level*, Player*, int, int, int, int)
001af024 W Tile::prepareRender(Level*, int, int, int)
001b6980 T Tile::setLightBlock(int)
009884b0 B Tile::stairs_quartz
0098860c B Tile::stoneSlabHalf
001bba80 T Tile::teardownTiles()
001b692c T Tile::getRenderLayer()
001b67a6 T Tile::getRenderShape()
001bcd88 T Tile::getTextureItem(std::string const&)
00988508 B Tile::info_reserved6
001b6baa T Tile::isPathfindable(LevelSource*, int, int, int)
001b6946 T Tile::isSignalSource()
001b69ae T Tile::setDestroyTime(float)
001b699c T Tile::setExplodeable(float)
001b6780 T Tile::spawnResources(Level*, int, int, int, int)
001b8fb4 T Tile::spawnResources(Level*, int, int, int, int, float)
009884ec B Tile::woodStairsDark
001b694a T Tile::getDirectSignal(Level*, int, int, int, int)
009884f0 B Tile::glowingObsidian
001b72c8 T Tile::neighborChanged(Level*, int, int, int, int, int, int, int)
009885d4 B Tile::redStoneOre_lit
009884e8 B Tile::woodStairsBirch
001b6912 T Tile::getResourceCount(Random*)
00988510 B Tile::info_updateGame1
0098850c B Tile::info_updateGame2
001b72e4 T Tile::setDescriptionId(std::string const&)
001b66cc T Tile::setLightEmission(float)
001b7b90 T Tile::shouldRenderFace(LevelSource*, int, int, int, int)
009884b8 B Tile::stairs_sandStone
00988524 B Tile::stoneBrickSmooth
00988578 B Tile::stonecutterBench
009884e4 B Tile::woodStairsJungle
001b6ba4 T Tile::finalizePlacement(Level*, int, int, int, int)
001b6b98 T Tile::getCarriedTexture(int, int)
001af00c W Tile::getTileEntityType()
0098858c B Tile::invisible_bedrock
001b67a0 T Tile::playerWillDestroy(Level*, int, int, int, int, Player*)
001b7eb4 T Tile::getDestroyProgress(Player*)
001af028 W Tile::handleEntityInside(Level*, int, int, int, Entity*, Vec3&)
001b6934 T Tile::spawnBurnResources(Level*, float, float, float)
001aeff0 W Tile::updateDefaultShape()
009884bc B Tile::stairs_netherBricks
00989564 B Tile::_terrainTextureAtlas
001b7008 T Tile::getTypeDescriptionId(int)
001af020 W Tile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001af014 W Tile::onGraphicsModeChanged(bool)
001b691a T Tile::getExplosionResistance(Entity*)
0098961c B Tile::TILE_DESCRIPTION_PREFIX
009884d0 B Tile::stairs_stoneBrickSmooth
001bbae4 T Tile::transformToValidBlockId(int)
001bbaac T Tile::transformToValidBlockId(int, int, int, int)
001b69e8 T Tile::getSpawnResourcesAuxValue(int)
001bc608 T Tile::getTextureUVCoordinateSet(std::string const&, int)
00988530 B Tile::bed
0098861c B Tile::ice
009885b0 B Tile::tnt
001b6930 T Tile::use(Level*, int, int, int, Player*)
00988640 B Tile::web
009884ac B Tile::cake
00988618 B Tile::clay
001bc116 T Tile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
00988624 B Tile::dirt
00988590 B Tile::fire
001b66fc T Tile::init()
00988594 B Tile::lava
00988548 B Tile::rail
0098862c B Tile::rock
009885f8 B Tile::rose
00988660 B Tile::sand
009885a8 B Tile::sign
009885e4 B Tile::snow
001af010 W Tile::tick(Level*, int, int, int, Random*)
00988650 B Tile::wood
00988568 B Tile::chest
00988600 B Tile::cloth
00988574 B Tile::crops
00988520 B Tile::fence
00988644 B Tile::glass
00988620 B Tile::grass
0098853c B Tile::melon
009885bc B Tile::reeds
00988864 B Tile::solid
00989164 B Tile::tiles
0098859c B Tile::torch
00988598 B Tile::water
001af026 W Tile::attack(Level*, int, int, int, Player*)
0098854c B Tile::cactus
001af01e W Tile::fallOn(Level*, int, int, int, Entity*, float)
009885fc B Tile::flower
00988630 B Tile::gravel
009885b8 B Tile::ladder
009885e0 B Tile::leaves
00988648 B Tile::sponge
001af01c W Tile::stepOn(Level*, int, int, int, Entity*)
00988500 B Tile::carrots
009885c8 B Tile::coalOre
001b679e T Tile::destroy(Level*, int, int, int, int)
00988570 B Tile::furnace
001b67ea T Tile::getAABB(Level*, int, int, int)
009885d0 B Tile::goldOre
009885cc B Tile::ironOre
001b6900 T Tile::mayPick(int, bool)
001b690a T Tile::mayPick()
001afc40 W Tile::onPlace(Level*, int, int, int)
00988518 B Tile::pumpkin
0098864c B Tile::sapling
009885ec B Tile::topSnow
001bdf80 T Tile::addAABBs(Level*, int, int, int, AABB const*, std::vector<AABB, std::allocator<AABB> >&)
009884f8 B Tile::beetroot
00988634 B Tile::calmLava
009884d4 B Tile::deadBush
00988614 B Tile::farmland
001b6938 T Tile::getColor(LevelSource*, int, int, int)
001af02a W Tile::getColor(int)
009884e0 B Tile::hayBlock
009885c4 B Tile::lapisOre
00988564 B Tile::lightGem
001b6b5c T Tile::mayPlace(Level*, int, int, int)
001b6b4c T Tile::mayPlace(Level*, int, int, int, unsigned char)
009885b4 B Tile::obsidian
001afc42 W Tile::onRemove(Level*, int, int, int)
009884fc B Tile::potatoes
00988654 B Tile::redBrick
001b6b38 T Tile::setShape(float, float, float, float, float, float)
00988528 B Tile::trapdoor
009885a4 B Tile::wallSign
00988608 B Tile::woodSlab
001bd6f0 W Tile::SoundType::SoundType(std::string const&, float, float)
001bd6f0 W Tile::SoundType::SoundType(std::string const&, float, float)
001b6fbc W Tile::SoundType::~SoundType()
001b6fbc W Tile::SoundType::~SoundType()
001aeff2 W Tile::addLights(Level*, int, int, int)
009885ac B Tile::bookshelf
00988638 B Tile::calmWater
009884dc B Tile::coalBlock
001bc038 T Tile::containsX(Vec3 const&)
001bc082 T Tile::containsY(Vec3 const&)
001bc0cc T Tile::containsZ(Vec3 const&)
00988550 B Tile::door_iron
00988554 B Tile::door_wood
0098851c B Tile::fenceGate
001b693e T Tile::getSignal(LevelSource*, int, int, int)
001b6942 T Tile::getSignal(LevelSource*, int, int, int, int)
00988588 B Tile::goldBlock
001be368 T Tile::initTiles(std::shared_ptr<TextureAtlas>)
00988584 B Tile::ironBlock
009884c4 B Tile::ironFence
00988534 B Tile::melonStem
009885a0 B Tile::mossStone
009885f4 B Tile::mushroom1
009885f0 B Tile::mushroom2
0098865c B Tile::sandStone
00988610 B Tile::stoneSlab
0098852c B Tile::tallgrass
0098863c B Tile::thinGlass
009885e8 B Tile::treeTrunk
0098857c B Tile::workBench
001bbbf4 T Tile::Tile(int, TextureUVCoordinateSet, Material const*)
001bbaf0 T Tile::Tile(int, Material const*)
001bc778 T Tile::Tile(int, std::string, Material const*)
001bbbf4 T Tile::Tile(int, TextureUVCoordinateSet, Material const*)
001bbaf0 T Tile::Tile(int, Material const*)
001bc778 T Tile::Tile(int, std::string, Material const*)
001b1fd2 W Tile::~Tile()
001b1f7c W Tile::~Tile()
001b1f7c W Tile::~Tile()
001aff3c T BedTile::getTexture(int, int)
001affac T BedTile::isOccupied(int)
001afe48 T BedTile::getResource(int, Random*)
001afdf8 T BedTile::isHeadPiece(int)
001afce8 T BedTile::setOccupied(Level*, int, int, int, bool)
001afce4 T BedTile::updateShape(LevelSource*, int, int, int)
001afc4c T BedTile::isCubeShaped()
001afc50 T BedTile::isSolidRender()
001afc54 T BedTile::getRenderLayer()
001afc48 T BedTile::getRenderShape()
001afe00 T BedTile::spawnResources(Level*, int, int, int, int, float)
001afe6c T BedTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001afd20 T BedTile::findStandUpPosition(Level*, int, int, int, int, Pos&)
00288b2c R BedTile::HEAD_DIRECTION_OFFSETS
001affb4 T BedTile::use(Level*, int, int, int, Player*)
001afcc4 W BedTile::_setShape()
001b0300 T BedTile::BedTile(int)
001b0300 T BedTile::BedTile(int)
001afcb0 W BedTile::~BedTile()
001afc90 W BedTile::~BedTile()
001afc90 W BedTile::~BedTile()
001b74a4 W IceTile::playerDestroy(Level*, Player*, int, int, int, int)
001b5edc W IceTile::getResourceCount(Random*)
001b8124 W IceTile::tick(Level*, int, int, int, Random*)
001b713e W IceTile::~IceTile()
001b6e5c W IceTile::~IceTile()
001b6e5c W IceTile::~IceTile()
001b6144 W OreTile::getResource(int, Random*)
001b8f40 W OreTile::getResourceCount(Random*)
001b619c W OreTile::getSpawnResourcesAuxValue(int)
001bc8b8 W OreTile::OreTile(int, std::string const&)
001bc8b8 W OreTile::OreTile(int, std::string const&)
001b7198 W OreTile::~OreTile()
001b6ddc W OreTile::~OreTile()
001b6ddc W OreTile::~OreTile()
001b64ec W TntTile::getTexture(int)
001b8e9a W TntTile::wasExploded(Level*, int, int, int)
001b7fc0 W TntTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b64fc W TntTile::getResourceCount(Random*)
001b8cec W TntTile::use(Level*, int, int, int, Player*)
001b8c5c W TntTile::destroy(Level*, int, int, int, int)
001bd21c W TntTile::TntTile(int, std::string const&)
001bd21c W TntTile::TntTile(int, std::string const&)
001b7270 W TntTile::~TntTile()
001b6c7c W TntTile::~TntTile()
001b6c7c W TntTile::~TntTile()
001b6520 W WebTile::getResource(int, Random*)
001b6504 W WebTile::entityInside(Level*, int, int, int, Entity*)
001b651c W WebTile::isCubeShaped()
001b6510 W WebTile::isSolidRender()
001b6500 W WebTile::getRenderLayer()
001b6518 W WebTile::getRenderShape()
001b6514 W WebTile::getAABB(Level*, int, int, int)
001b7282 W WebTile::~WebTile()
001b6c5c W WebTile::~WebTile()
001b6c5c W WebTile::~WebTile()
001b5d20 W CakeTile::canSurvive(Level*, int, int, int)
001b79d0 W CakeTile::getTexture(int, int)
001b5ca8 W CakeTile::updateShape(LevelSource*, int, int, int)
001b5d38 W CakeTile::isCubeShaped()
001b5d3c W CakeTile::isSolidRender()
001b78dc W CakeTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b5d40 W CakeTile::getResourceCount(Random*)
001b5cfc W CakeTile::updateDefaultShape()
001b8338 W CakeTile::use(Level*, int, int, int, Player*)
001b5c9a W CakeTile::mayPlace(Level*, int, int, int, unsigned char)
001bcc48 W CakeTile::CakeTile(int)
001bcc48 W CakeTile::CakeTile(int)
001b709c W CakeTile::~CakeTile()
001b6f5c W CakeTile::~CakeTile()
001b6f5c W CakeTile::~CakeTile()
001b5d44 W ClayTile::getResource(int, Random*)
001b5d5c W ClayTile::getResourceCount(Random*)
001b70ae W ClayTile::~ClayTile()
001b6f3c W ClayTile::~ClayTile()
001b6f3c W ClayTile::~ClayTile()
001b0f2e T CropTile::getTexture(LevelSource*, int, int, int, int)
001b0f20 T CropTile::getTexture(int, int)
001b0ed8 T CropTile::mayPlaceOn(int)
001b0ef4 T CropTile::getBaseSeed()
001b0ebc T CropTile::getResource(int, Random*)
001b05b2 W CropTile::onFertilized(Level*, int, int, int)
001b0f08 T CropTile::getBasePlantId()
001b1090 T CropTile::getGrowthSpeed(Level*, int, int, int)
001b0eb8 T CropTile::getRenderShape()
001b0f60 T CropTile::spawnResources(Level*, int, int, int, int, float)
001b0ed2 T CropTile::getResourceCount(Random*)
001b1234 T CropTile::tick(Level*, int, int, int, Random*)
001b12d0 T CropTile::CropTile(int, std::string const&)
001b12d0 T CropTile::CropTile(int, std::string const&)
001b06fa W CropTile::~CropTile()
001b0698 W CropTile::~CropTile()
001b0698 W CropTile::~CropTile()
001b70c0 W DirtTile::~DirtTile()
001b6f1c W DirtTile::~DirtTile()
001b6f1c W DirtTile::~DirtTile()
001b1b58 T DoorTile::getTexture(LevelSource*, int, int, int, int)
001b171e T DoorTile::blocksLight()
001b1618 T DoorTile::getResource(int, Random*)
001b15de T DoorTile::getTileAABB(Level*, int, int, int)
001b1aac T DoorTile::updateShape(LevelSource*, int, int, int)
001b1550 T DoorTile::isCubeShaped()
001b154c T DoorTile::isSolidRender()
001b1558 T DoorTile::getRenderLayer()
001b1554 T DoorTile::getRenderShape()
001b181c T DoorTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b1722 T DoorTile::getCompositeData(LevelSource*, int, int, int)
001b16a0 T DoorTile::playerWillDestroy(Level*, int, int, int, int, Player*)
001b1a08 T DoorTile::use(Level*, int, int, int, Player*)
001b1570 T DoorTile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
001b155c T DoorTile::attack(Level*, int, int, int, Player*)
001b1776 T DoorTile::getDir(LevelSource*, int, int, int)
001b19fc T DoorTile::isOpen(LevelSource*, int, int, int)
001b15b4 T DoorTile::getAABB(Level*, int, int, int)
001b178a T DoorTile::setOpen(Level*, int, int, int, bool)
001b1650 T DoorTile::mayPlace(Level*, int, int, int)
001b1c2c T DoorTile::DoorTile(int, Material const*)
001b1c2c T DoorTile::DoorTile(int, Material const*)
001b170c W DoorTile::~DoorTile()
001b16e8 W DoorTile::~DoorTile()
001b16e8 W DoorTile::~DoorTile()
001b5dc0 W FarmTile::getTexture(int, int)
001b5dd4 W FarmTile::getResource(int, Random*)
001b5dbc W FarmTile::isCubeShaped()
001b5db8 W FarmTile::isSolidRender()
001b7504 W FarmTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b88fc W FarmTile::tick(Level*, int, int, int, Random*)
001b91bc W FarmTile::fallOn(Level*, int, int, int, Entity*, float)
001b5d64 W FarmTile::getAABB(Level*, int, int, int)
001bd400 W FarmTile::FarmTile(int)
001bd400 W FarmTile::FarmTile(int)
001b70d2 W FarmTile::~FarmTile()
001b6efc W FarmTile::~FarmTile()
001b6efc W FarmTile::~FarmTile()
001b97dc W FireTile::animateTick(Level*, int, int, int, Random*)
001b9dfa W FireTile::getFireOdds(Level*, int, int, int)
001b5ec4 W FireTile::getTickDelay()
001b5eb4 W FireTile::isCubeShaped()
001b5eb0 W FireTile::isSolidRender()
001b5ebc W FireTile::getRenderLayer()
001b5eb8 W FireTile::getRenderShape()
001b9bc0 W FireTile::getFlammability(Level*, int, int, int, int)
001b9d74 W FireTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b5ec0 W FireTile::getResourceCount(Random*)
001b9c8c W FireTile::isValidFireLocation(Level*, int, int, int)
001b9e88 W FireTile::tick(Level*, int, int, int, Random*)
00146972 W FireTile::canBurn(LevelSource*, int, int, int)
001b5eac W FireTile::getAABB(Level*, int, int, int)
001b5ec8 W FireTile::mayPick()
001b9d08 W FireTile::onPlace(Level*, int, int, int)
001b9dc2 W FireTile::mayPlace(Level*, int, int, int)
001b9be4 W FireTile::checkBurn(Level*, int, int, int, int, Random*)
001bc988 W FireTile::FireTile(int, std::string const&)
001bc988 W FireTile::FireTile(int, std::string const&)
001b7108 W FireTile::~FireTile()
001b6e9c W FireTile::~FireTile()
001b6e9c W FireTile::~FireTile()
001b5ff0 W LeafTile::getTexture(int, int)
001b5fd4 W LeafTile::getResource(int, Random*)
001b5fec W LeafTile::isSolidRender()
001bbed0 W LeafTile::playerDestroy(Level*, Player*, int, int, int, int)
001b5f9c W LeafTile::getRenderLayer()
001bbe18 W LeafTile::spawnResources(Level*, int, int, int, int, float)
001b8f70 W LeafTile::getResourceCount(Random*)
001b6018 W LeafTile::getCarriedTexture(int, int)
001b600a W LeafTile::onGraphicsModeChanged(bool)
001b6026 W LeafTile::getSpawnResourcesAuxValue(int)
001b89f0 W LeafTile::tick(Level*, int, int, int, Random*)
001b5fa0 W LeafTile::getColor(LevelSource*, int, int, int)
001b8278 W LeafTile::onRemove(Level*, int, int, int)
001bd04c W LeafTile::LeafTile(int, std::string const&)
001bd04c W LeafTile::LeafTile(int, std::string const&)
001b7818 W LeafTile::~LeafTile()
001b77ec W LeafTile::~LeafTile()
001b77ec W LeafTile::~LeafTile()
001b3c18 T RailTile::getTexture(int, int)
001b3cc8 T RailTile::updateState(Level*, int, int, int, int, int, int)
001b3c5c T RailTile::RailTile(int)
001b3c5c T RailTile::RailTile(int)
001b3c48 W RailTile::~RailTile()
001b3c24 W RailTile::~RailTile()
001b3c24 W RailTile::~RailTile()
001b62c4 W ReedTile::canSurvive(Level*, int, int, int)
001b62d8 W ReedTile::getResource(int, Random*)
001b62f4 W ReedTile::isCubeShaped()
001b731c W ReedTile::onFertilized(Level*, int, int, int)
001b62f0 W ReedTile::isSolidRender()
001b62fc W ReedTile::getRenderLayer()
001b62f8 W ReedTile::getRenderShape()
001bbdb0 W ReedTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b7684 W ReedTile::tick(Level*, int, int, int, Random*)
001b62d2 W ReedTile::getAABB(Level*, int, int, int)
001b61e0 W ReedTile::mayPlace(Level*, int, int, int)
001b71e0 W ReedTile::~ReedTile()
001b6d5c W ReedTile::~ReedTile()
001b6d5c W ReedTile::~ReedTile()
001b63d0 W SignTile::getResource(int, Random*)
001b6a4e W SignTile::getTileAABB(Level*, int, int, int)
001b7a78 W SignTile::updateShape(LevelSource*, int, int, int)
001b63c2 W SignTile::isCubeShaped()
001b63ca W SignTile::isSolidRender()
001b63b8 W SignTile::getRenderShape()
001b63c6 W SignTile::isPathfindable(LevelSource*, int, int, int)
001b73ac W SignTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b63be W SignTile::getTileEntityType()
001b63b4 W SignTile::getAABB(Level*, int, int, int)
001bc640 W SignTile::SignTile(int, bool)
001bc640 W SignTile::SignTile(int, bool)
001b8e20 W SignTile::~SignTile()
001b8e00 W SignTile::~SignTile()
001b8e00 W SignTile::~SignTile()
001b3e04 W SlabTile::getTileType()
001b409c T SlabTile::updateShape(LevelSource*, int, int, int)
001b3f38 T SlabTile::isBottomSlab(LevelSource*, int, int, int)
001b3e1c T SlabTile::isCubeShaped()
001b3e08 T SlabTile::isSolidRender()
001b3e0e T SlabTile::getResourceCount(Random*)
001b3f54 T SlabTile::shouldRenderFace(LevelSource*, int, int, int, int)
001b3e58 T SlabTile::updateDefaultShape()
001b3e80 T SlabTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b3e22 T SlabTile::addAABBs(Level*, int, int, int, AABB const*, std::vector<AABB, std::allocator<AABB> >&)
001b3ee4 T SlabTile::SlabTile(int, std::string const&, bool, Material const*)
001b3ee4 T SlabTile::SlabTile(int, std::string const&, bool, Material const*)
001b3ed0 W SlabTile::~SlabTile()
001b3eac W SlabTile::~SlabTile()
001b3eac W SlabTile::~SlabTile()
001b63e8 W SnowTile::getResource(int, Random*)
001b6400 W SnowTile::getResourceCount(Random*)
001b80ac W SnowTile::tick(Level*, int, int, int, Random*)
001b7216 W SnowTile::~SnowTile()
001b6d1c W SnowTile::~SnowTile()
001b6d1c W SnowTile::~SnowTile()
001b4d4a T StemTile::getTexture(int, int)
001b4cfc T StemTile::mayPlaceOn(int)
001b4dc0 T StemTile::getResource(int, Random*)
001b4d74 T StemTile::updateShape(LevelSource*, int, int, int)
001b4e90 W StemTile::onFertilized(Level*, int, int, int)
001b53c4 T StemTile::getConnectDir(LevelSource*, int, int, int)
001b502c T StemTile::getGrowthSpeed(Level*, int, int, int)
001b4dbc T StemTile::getRenderShape()
001b4e00 T StemTile::spawnResources(Level*, int, int, int, int, float)
001b4dc6 T StemTile::getResourceCount(Random*)
001b4d50 T StemTile::updateDefaultShape()
001b5472 T StemTile::getConnectedTexture()
001b51d0 T StemTile::tick(Level*, int, int, int, Random*)
001b4d2a T StemTile::getColor(LevelSource*, int, int, int)
001b4d18 T StemTile::getColor(int)
001b4ee0 T StemTile::StemTile(int, Tile*)
001b4ee0 T StemTile::StemTile(int, Tile*)
001b4dec W StemTile::~StemTile()
001b4dcc W StemTile::~StemTile()
001b4dcc W StemTile::~StemTile()
001b6310 W TreeTile::getResource(int, Random*)
001b6328 W TreeTile::getDirTexture(int, int)
001b630a W TreeTile::getResourceCount(Random*)
001b7054 W TreeTile::getTypeDescriptionId(int)
001b638a W TreeTile::getSpawnResourcesAuxValue(int)
001b81b4 W TreeTile::onRemove(Level*, int, int, int)
001bcda0 W TreeTile::TreeTile(int)
001bcda0 W TreeTile::TreeTile(int)
001b8e54 W TreeTile::~TreeTile()
001b8e34 W TreeTile::~TreeTile()
001b8e34 W TreeTile::~TreeTile()
00288bc8 R WallTile::POST_WIDTH
00288bd0 R WallTile::WALL_WIDTH
001c24d8 T WallTile::connectsTo(LevelSource*, int, int, int)
001c2420 T WallTile::getTexture(int, int)
00288bc4 R WallTile::POST_HEIGHT
00288bcc R WallTile::WALL_HEIGHT
001c254c T WallTile::updateShape(LevelSource*, int, int, int)
00989670 B WallTile::COBBLE_NAMES
001c23c0 T WallTile::isCubeShaped()
001c23c4 T WallTile::isSolidRender()
001c23bc T WallTile::getRenderShape()
001c2448 T WallTile::shouldRenderFace(LevelSource*, int, int, int, int)
001c23c8 T WallTile::getSpawnResourcesAuxValue(int)
001c23f0 T WallTile::getAABB(Level*, int, int, int)
001c2494 T WallTile::WallTile(int, Tile*)
001c2494 T WallTile::WallTile(int, Tile*)
001c2480 W WallTile::~WallTile()
001c245c W WallTile::~WallTile()
001c245c W WallTile::~WallTile()
001c268c T WoodTile::getTexture(int, int)
001c2664 T WoodTile::getTypeDescriptionId(int)
001c2660 T WoodTile::getSpawnResourcesAuxValue(int)
001c26f0 T WoodTile::WoodTile(int)
001c26f0 T WoodTile::WoodTile(int)
001c26dc W WoodTile::~WoodTile()
001c269c W WoodTile::~WoodTile()
001c269c W WoodTile::~WoodTile()
001b0b52 T ChestTile::getTexture(LevelSource*, int, int, int, int)
001b0b08 T ChestTile::getTexture(int)
001b0a9c T ChestTile::isCubeShaped()
001b0a98 T ChestTile::isSolidRender()
001b0aa0 T ChestTile::getRenderShape()
001b0a94 W ChestTile::getTileEntityType()
001b0aa4 T ChestTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b0b20 T ChestTile::use(Level*, int, int, int, Player*)
001b0bb8 T ChestTile::onRemove(Level*, int, int, int)
001b0d88 T ChestTile::ChestTile(int)
001b0d88 T ChestTile::ChestTile(int)
001b0ba4 W ChestTile::~ChestTile()
001b0b80 W ChestTile::~ChestTile()
001b0b80 W ChestTile::~ChestTile()
001b7ea4 W ClothTile::getTexture(int, int)
001b5d60 W ClothTile::getSpawnResourcesAuxValue(int)
001bda30 W ClothTile::ClothTile(int)
001bda30 W ClothTile::ClothTile(int)
001b94d4 W ClothTile::~ClothTile()
001b94ac W ClothTile::~ClothTile()
001b94ac W ClothTile::~ClothTile()
00146880 W FenceTile::connectsTo(LevelSource*, int, int, int)
001b9644 W FenceTile::updateShape(LevelSource*, int, int, int)
001b5df8 W FenceTile::isCubeShaped()
001b5df4 W FenceTile::isSolidRender()
001b5dfc W FenceTile::getRenderShape()
001b96f8 W FenceTile::getAABB(Level*, int, int, int)
001b6b90 W FenceTile::mayPlace(Level*, int, int, int)
001b70e4 W FenceTile::~FenceTile()
001b6edc W FenceTile::~FenceTile()
001b6edc W FenceTile::~FenceTile()
001b5ed8 W GlassTile::getRenderLayer()
001b5ed4 W GlassTile::getResourceCount(Random*)
001b712c W GlassTile::~GlassTile()
001b6e7c W GlassTile::~GlassTile()
001b6e7c W GlassTile::~GlassTile()
001b258c T GrassTile::getTexture(LevelSource*, int, int, int, int)
001b2540 T GrassTile::getTexture(int, int)
001b275c T GrassTile::_randomWalk(Level*, int&, int&, int&, int)
001b256c T GrassTile::getResource(int, Random*)
001b2850 T GrassTile::onFertilized(Level*, int, int, int)
001b25e4 T GrassTile::getCarriedTexture(int, int)
001b2630 T GrassTile::tick(Level*, int, int, int, Random*)
001b255c T GrassTile::getColor(LevelSource*, int, int, int)
001b2554 T GrassTile::getColor(int)
001b2918 T GrassTile::GrassTile(int)
001b2918 T GrassTile::GrassTile(int)
001b261c W GrassTile::~GrassTile()
001b25f8 W GrassTile::~GrassTile()
001b25f8 W GrassTile::~GrassTile()
001b2be0 T HeavyTile::checkSlide(Level*, int, int, int)
001b2a74 W HeavyTile::getTickDelay()
001b2aa6 T HeavyTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001b2d20 T HeavyTile::tick(Level*, int, int, int, Random*)
001b2b8c T HeavyTile::isFree(Level*, int, int, int)
001b2ad6 T HeavyTile::onLand(Level*, int, int, int, int)
001b2ad4 T HeavyTile::falling(FallingTile*)
001b2a78 T HeavyTile::onPlace(Level*, int, int, int)
00988200 B HeavyTile::instaFall
001b2b10 T HeavyTile::HeavyTile(int, std::string const&)
001b2b50 T HeavyTile::HeavyTile(int, std::string const&, Material const*)
001b2b10 T HeavyTile::HeavyTile(int, std::string const&)
001b2b50 T HeavyTile::HeavyTile(int, std::string const&, Material const*)
001b2afc W HeavyTile::~HeavyTile()
001b2ad8 W HeavyTile::~HeavyTile()
001b2ad8 W HeavyTile::~HeavyTile()
001b2dd4 T MelonTile::getTexture(LevelSource*, int, int, int, int)
001b2de0 T MelonTile::getTexture(int)
001b2dec T MelonTile::getResource(int, Random*)
001b2e3a T MelonTile::getResourceCount(Random*)
001b2e4c T MelonTile::MelonTile(int)
001b2e4c T MelonTile::MelonTile(int)
001b2e28 W MelonTile::~MelonTile()
001b2e04 W MelonTile::~MelonTile()
001b2e04 W MelonTile::~MelonTile()
001b61bc W MetalTile::getTexture(int)
001bc948 W MetalTile::MetalTile(int, std::string const&)
001bc948 W MetalTile::MetalTile(int, std::string const&)
001b71aa W MetalTile::~MetalTile()
001b6dbc W MetalTile::~MetalTile()
001b6dbc W MetalTile::~MetalTile()
001b41ba W StairTile::getTexture(LevelSource*, int, int, int, int)
001b41a6 W StairTile::getTexture(int)
001b4192 W StairTile::getTexture(int, int)
00288b80 R StairTile::DEAD_SPACES
001b410c W StairTile::animateTick(Level*, int, int, int, Random*)
001b41de W StairTile::getTileAABB(Level*, int, int, int)
001b40ea W StairTile::getTileType()
001b4528 W StairTile::updateShape(LevelSource*, int, int, int)
001b42fa W StairTile::wasExploded(Level*, int, int, int)
001b41d0 W StairTile::getTickDelay()
001b40f2 W StairTile::isCubeShaped()
00146928 W StairTile::setBaseShape(LevelSource*, int, int, int)
001b4690 T StairTile::setStepShape(LevelSource*, int, int, int)
001b4150 W StairTile::getBrightness(LevelSource*, int, int, int)
001b40ee W StairTile::isSolidRender()
001b42a0 W StairTile::prepareRender(Level*, int, int, int)
001b4172 W StairTile::getRenderLayer()
001b40f6 W StairTile::getRenderShape()
001b4650 W StairTile::isLockAttached(LevelSource*, int, int, int, int)
001b4182 W StairTile::getResourceCount(Random*)
001b41f8 W StairTile::handleEntityInside(Level*, int, int, int, Entity*, Vec3&)
001b49e8 T StairTile::setInnerPieceShape(LevelSource*, int, int, int)
001b4310 T StairTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001b4162 W StairTile::getExplosionResistance(Entity*)
001b42e2 W StairTile::use(Level*, int, int, int, Player*)
001b4390 T StairTile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
001b42cc W StairTile::tick(Level*, int, int, int, Random*)
001b4122 W StairTile::attack(Level*, int, int, int, Player*)
001b42b4 W StairTile::stepOn(Level*, int, int, int, Entity*)
001b413a W StairTile::destroy(Level*, int, int, int, int)
001b4226 W StairTile::mayPick(int, bool)
001b4218 W StairTile::mayPick()
001b4246 W StairTile::onPlace(Level*, int, int, int)
001b4c5c W StairTile::addAABBs(Level*, int, int, int, AABB const*, std::vector<AABB, std::allocator<AABB> >&)
001b4620 W StairTile::isStairs(int)
001b4234 W StairTile::mayPlace(Level*, int, int, int, unsigned char)
001b428c W StairTile::onRemove(Level*, int, int, int)
001b40fa W StairTile::addLights(Level*, int, int, int)
001bbb88 W StairTile::StairTile(int, Tile*, int)
001bbb88 W StairTile::StairTile(int, Tile*, int)
001b460c W StairTile::~StairTile()
001b45e8 W StairTile::~StairTile()
001b45e8 W StairTile::~StairTile()
001b6110 W StoneTile::getResource(int, Random*)
001bc808 W StoneTile::StoneTile(int, std::string const&)
001bc808 W StoneTile::StoneTile(int, std::string const&)
001b7174 W StoneTile::~StoneTile()
001b6bdc W StoneTile::~StoneTile()
001b6bdc W StoneTile::~StoneTile()
001b7574 W TorchTile::animateTick(Level*, int, int, int, Random*)
001bb490 W TorchTile::isConnection(Level*, int, int, int)
001b64e0 W TorchTile::isCubeShaped()
001b64dc W TorchTile::isSolidRender()
001b64e8 W TorchTile::getRenderLayer()
001b64e4 W TorchTile::getRenderShape()
001bb616 W TorchTile::checkCanSurvive(Level*, int, int, int)
001bb68e W TorchTile::neighborChanged(Level*, int, int, int, int, int, int, int)
001bb508 W TorchTile::getPlacementDataValue(Level*, int, int, int, int, float, float, float, Mob*, int)
001bc510 W TorchTile::clip(Level*, int, int, int, Vec3 const&, Vec3 const&)
001b7b3e W TorchTile::tick(Level*, int, int, int, Random*)
001b64d8 W TorchTile::getAABB(Level*, int, int, int)
001bb792 W TorchTile::onPlace(Level*, int, int, int)
001bb5a6 W TorchTile::mayPlace(Level*, int, int, int)
001b725e W TorchTile::~TorchTile()
001b6c9c W TorchTile::~TorchTile()
001b6c9c W TorchTile::~TorchTile()
00184bae T FallingTile::getEntityTypeId() const
001bdb50 W QuartzBlockTile::getDescriptionId(ItemInstance const*) const
001b696a T Tile::getDescriptionId(ItemInstance const*) const
001b7020 T Tile::getDescriptionId() const
001bdbb4 T Tile::getName() const
001af834 W std::shared_ptr<BaseRailTile::Rail>::shared_ptr<BaseRailTile::Rail>(BaseRailTile::Rail*)
001af834 W std::shared_ptr<BaseRailTile::Rail>::shared_ptr<BaseRailTile::Rail>(BaseRailTile::Rail*)
001af800 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<BaseRailTile::Rail*>(BaseRailTile::Rail*)
001af800 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<BaseRailTile::Rail*>(BaseRailTile::Rail*)
001af094 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
001af4c2 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
001af070 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
001af074 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
001af058 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
001af058 W std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
002dd538 V vtable for WoodSlabTile::Item
002d7278 V vtable for std::_Sp_counted_ptr<BaseRailTile::Rail*, (__gnu_cxx::_Lock_policy)2>
